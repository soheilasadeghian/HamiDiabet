#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace testwebapi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="jwtTestDB")]
	public partial class DataAccessDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertuserTbl(userTbl instance);
    partial void UpdateuserTbl(userTbl instance);
    partial void DeleteuserTbl(userTbl instance);
    #endregion
		
		public DataAccessDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["jwtTestDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataAccessDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<userTbl> userTbls
		{
			get
			{
				return this.GetTable<userTbl>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userTbl")]
	public partial class userTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _userName;
		
		private string _password;
		
		private string _ticket;
		
		private string _hashAccessToken;
		
		private string _hashRefreshToken;
		
		private System.DateTime _lastActivityDate;
		
		private string _SerialNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnticketChanging(string value);
    partial void OnticketChanged();
    partial void OnhashAccessTokenChanging(string value);
    partial void OnhashAccessTokenChanged();
    partial void OnhashRefreshTokenChanging(string value);
    partial void OnhashRefreshTokenChanged();
    partial void OnlastActivityDateChanging(System.DateTime value);
    partial void OnlastActivityDateChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    #endregion
		
		public userTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ticket", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ticket
		{
			get
			{
				return this._ticket;
			}
			set
			{
				if ((this._ticket != value))
				{
					this.OnticketChanging(value);
					this.SendPropertyChanging();
					this._ticket = value;
					this.SendPropertyChanged("ticket");
					this.OnticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hashAccessToken", DbType="NVarChar(50)")]
		public string hashAccessToken
		{
			get
			{
				return this._hashAccessToken;
			}
			set
			{
				if ((this._hashAccessToken != value))
				{
					this.OnhashAccessTokenChanging(value);
					this.SendPropertyChanging();
					this._hashAccessToken = value;
					this.SendPropertyChanged("hashAccessToken");
					this.OnhashAccessTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hashRefreshToken", DbType="NVarChar(50)")]
		public string hashRefreshToken
		{
			get
			{
				return this._hashRefreshToken;
			}
			set
			{
				if ((this._hashRefreshToken != value))
				{
					this.OnhashRefreshTokenChanging(value);
					this.SendPropertyChanging();
					this._hashRefreshToken = value;
					this.SendPropertyChanged("hashRefreshToken");
					this.OnhashRefreshTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime lastActivityDate
		{
			get
			{
				return this._lastActivityDate;
			}
			set
			{
				if ((this._lastActivityDate != value))
				{
					this.OnlastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._lastActivityDate = value;
					this.SendPropertyChanged("lastActivityDate");
					this.OnlastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
